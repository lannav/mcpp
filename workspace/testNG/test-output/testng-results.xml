<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="428" passed="428" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2018-02-28T13:32:03Z" name="Suite" finished-at="2018-02-28T13:32:06Z" duration-ms="3015">
    <groups>
    </groups>
    <test started-at="2018-02-28T13:32:03Z" name="Test" finished-at="2018-02-28T13:32:06Z" duration-ms="3015">
      <class name="TestNGtests.TestSort">
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSort@76ed1b7c]" started-at="2018-02-28T13:32:06Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSort@76ed1b7c]" started-at="2018-02-28T13:32:06Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSort@76ed1b7c]" started-at="2018-02-28T13:32:06Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSort@76ed1b7c]" started-at="2018-02-28T13:32:06Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSort@76ed1b7c]" started-at="2018-02-28T13:32:06Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSort@76ed1b7c]" started-at="2018-02-28T13:32:06Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSort@76ed1b7c]" started-at="2018-02-28T13:32:06Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSort@76ed1b7c]" started-at="2018-02-28T13:32:06Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSort@76ed1b7c]" started-at="2018-02-28T13:32:06Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSort@76ed1b7c]" started-at="2018-02-28T13:32:06Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSort@76ed1b7c]" started-at="2018-02-28T13:32:06Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSort@76ed1b7c]" started-at="2018-02-28T13:32:06Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_many_chet(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSort@76ed1b7c]" started-at="2018-02-28T13:32:06Z" name="test_many_chet" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1 3 4 5 5 6 8 9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_chet -->
        <test-method signature="test_many_chet(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSort@76ed1b7c]" started-at="2018-02-28T13:32:06Z" name="test_many_chet" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1 3 4 5 5 6 8 9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_chet -->
        <test-method signature="test_many_chet(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSort@76ed1b7c]" started-at="2018-02-28T13:32:06Z" name="test_many_chet" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1 3 4 5 5 6 8 9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_chet -->
        <test-method signature="test_many_chet(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSort@76ed1b7c]" started-at="2018-02-28T13:32:06Z" name="test_many_chet" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1 3 4 5 5 6 8 9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_chet -->
        <test-method signature="test_many_nechet(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSort@76ed1b7c]" started-at="2018-02-28T13:32:06Z" name="test_many_nechet" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1 3 4 5 5 6 8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_nechet -->
        <test-method signature="test_many_nechet(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSort@76ed1b7c]" started-at="2018-02-28T13:32:06Z" name="test_many_nechet" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1 3 4 5 5 6 8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_nechet -->
        <test-method signature="test_many_nechet(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSort@76ed1b7c]" started-at="2018-02-28T13:32:06Z" name="test_many_nechet" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1 3 4 5 5 6 8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_nechet -->
        <test-method signature="test_many_nechet(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSort@76ed1b7c]" started-at="2018-02-28T13:32:06Z" name="test_many_nechet" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1 3 4 5 5 6 8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_nechet -->
      </class> <!-- TestNGtests.TestSort -->
      <class name="TestNGtests.TestSize">
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSize@17a7f733]" started-at="2018-02-28T13:32:06Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSize@17a7f733]" started-at="2018-02-28T13:32:06Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSize@17a7f733]" started-at="2018-02-28T13:32:06Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSize@17a7f733]" started-at="2018-02-28T13:32:06Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSize@17a7f733]" started-at="2018-02-28T13:32:06Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSize@17a7f733]" started-at="2018-02-28T13:32:06Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSize@17a7f733]" started-at="2018-02-28T13:32:06Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSize@17a7f733]" started-at="2018-02-28T13:32:06Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSize@17a7f733]" started-at="2018-02-28T13:32:06Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSize@17a7f733]" started-at="2018-02-28T13:32:06Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSize@17a7f733]" started-at="2018-02-28T13:32:06Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSize@17a7f733]" started-at="2018-02-28T13:32:06Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSize@17a7f733]" started-at="2018-02-28T13:32:06Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSize@17a7f733]" started-at="2018-02-28T13:32:06Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSize@17a7f733]" started-at="2018-02-28T13:32:06Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSize@17a7f733]" started-at="2018-02-28T13:32:06Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
      </class> <!-- TestNGtests.TestSize -->
      <class name="TestNGtests.TestDelStart">
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelStart@623a8092]" started-at="2018-02-28T13:32:04Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.AList0.delStart(AList0.java:88)
at TestNGtests.TestDelStart.test_0(TestDelStart.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelStart@623a8092]" started-at="2018-02-28T13:32:04Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.AList1.delStart(AList1.java:72)
at TestNGtests.TestDelStart.test_0(TestDelStart.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelStart@623a8092]" started-at="2018-02-28T13:32:04Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.AList2.delStart(AList2.java:71)
at TestNGtests.TestDelStart.test_0(TestDelStart.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelStart@623a8092]" started-at="2018-02-28T13:32:04Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.LList1.delStart(LList1.java:127)
at TestNGtests.TestDelStart.test_0(TestDelStart.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelStart@623a8092]" started-at="2018-02-28T13:32:04Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelStart@623a8092]" started-at="2018-02-28T13:32:04Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelStart@623a8092]" started-at="2018-02-28T13:32:04Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelStart@623a8092]" started-at="2018-02-28T13:32:04Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelStart@623a8092]" started-at="2018-02-28T13:32:04Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelStart@623a8092]" started-at="2018-02-28T13:32:04Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelStart@623a8092]" started-at="2018-02-28T13:32:04Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelStart@623a8092]" started-at="2018-02-28T13:32:04Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelStart@623a8092]" started-at="2018-02-28T13:32:04Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelStart@623a8092]" started-at="2018-02-28T13:32:04Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelStart@623a8092]" started-at="2018-02-28T13:32:04Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelStart@623a8092]" started-at="2018-02-28T13:32:04Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
      </class> <!-- TestNGtests.TestDelStart -->
      <class name="TestNGtests.TestClear">
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestClear@313b2ea6]" started-at="2018-02-28T13:32:04Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestClear@313b2ea6]" started-at="2018-02-28T13:32:04Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestClear@313b2ea6]" started-at="2018-02-28T13:32:04Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestClear@313b2ea6]" started-at="2018-02-28T13:32:04Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestClear@313b2ea6]" started-at="2018-02-28T13:32:04Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestClear@313b2ea6]" started-at="2018-02-28T13:32:04Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestClear@313b2ea6]" started-at="2018-02-28T13:32:04Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestClear@313b2ea6]" started-at="2018-02-28T13:32:04Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestClear@313b2ea6]" started-at="2018-02-28T13:32:04Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestClear@313b2ea6]" started-at="2018-02-28T13:32:04Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestClear@313b2ea6]" started-at="2018-02-28T13:32:04Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestClear@313b2ea6]" started-at="2018-02-28T13:32:04Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestClear@313b2ea6]" started-at="2018-02-28T13:32:04Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestClear@313b2ea6]" started-at="2018-02-28T13:32:04Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestClear@313b2ea6]" started-at="2018-02-28T13:32:04Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestClear@313b2ea6]" started-at="2018-02-28T13:32:04Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
      </class> <!-- TestNGtests.TestClear -->
      <class name="TestNGtests.TestHalfReverse">
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestHalfReverse@175b9425]" started-at="2018-02-28T13:32:05Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="13" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestHalfReverse@175b9425]" started-at="2018-02-28T13:32:05Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestHalfReverse@175b9425]" started-at="2018-02-28T13:32:05Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestHalfReverse@175b9425]" started-at="2018-02-28T13:32:05Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestHalfReverse@175b9425]" started-at="2018-02-28T13:32:05Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestHalfReverse@175b9425]" started-at="2018-02-28T13:32:05Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestHalfReverse@175b9425]" started-at="2018-02-28T13:32:05Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="63" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestHalfReverse@175b9425]" started-at="2018-02-28T13:32:05Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestHalfReverse@175b9425]" started-at="2018-02-28T13:32:05Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestHalfReverse@175b9425]" started-at="2018-02-28T13:32:05Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestHalfReverse@175b9425]" started-at="2018-02-28T13:32:05Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestHalfReverse@175b9425]" started-at="2018-02-28T13:32:05Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_many_chet(TestNGtests.EList)[pri:0, instance:TestNGtests.TestHalfReverse@175b9425]" started-at="2018-02-28T13:32:05Z" name="test_many_chet" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1 4 6 5 5 8 3 9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_chet -->
        <test-method signature="test_many_chet(TestNGtests.EList)[pri:0, instance:TestNGtests.TestHalfReverse@175b9425]" started-at="2018-02-28T13:32:05Z" name="test_many_chet" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1 4 6 5 5 8 3 9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_chet -->
        <test-method signature="test_many_chet(TestNGtests.EList)[pri:0, instance:TestNGtests.TestHalfReverse@175b9425]" started-at="2018-02-28T13:32:05Z" name="test_many_chet" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="58" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1 4 6 5 5 8 3 9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_chet -->
        <test-method signature="test_many_chet(TestNGtests.EList)[pri:0, instance:TestNGtests.TestHalfReverse@175b9425]" started-at="2018-02-28T13:32:05Z" name="test_many_chet" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1 4 6 5 5 8 3 9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_chet -->
        <test-method signature="test_many_nechet(TestNGtests.EList)[pri:0, instance:TestNGtests.TestHalfReverse@175b9425]" started-at="2018-02-28T13:32:05Z" name="test_many_nechet" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4 6 5 1 5 8 3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_nechet -->
        <test-method signature="test_many_nechet(TestNGtests.EList)[pri:0, instance:TestNGtests.TestHalfReverse@175b9425]" started-at="2018-02-28T13:32:05Z" name="test_many_nechet" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4 6 5 1 5 8 3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_nechet -->
        <test-method signature="test_many_nechet(TestNGtests.EList)[pri:0, instance:TestNGtests.TestHalfReverse@175b9425]" started-at="2018-02-28T13:32:05Z" name="test_many_nechet" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4 6 5 1 5 8 3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_nechet -->
        <test-method signature="test_many_nechet(TestNGtests.EList)[pri:0, instance:TestNGtests.TestHalfReverse@175b9425]" started-at="2018-02-28T13:32:05Z" name="test_many_nechet" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4 6 5 1 5 8 3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_nechet -->
      </class> <!-- TestNGtests.TestHalfReverse -->
      <class name="TestNGtests.TestDelEnd">
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelEnd@2f465398]" started-at="2018-02-28T13:32:04Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.AList0.delEnd(AList0.java:105)
at TestNGtests.TestDelEnd.test_0(TestDelEnd.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelEnd@2f465398]" started-at="2018-02-28T13:32:04Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.AList1.delEnd(AList1.java:87)
at TestNGtests.TestDelEnd.test_0(TestDelEnd.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelEnd@2f465398]" started-at="2018-02-28T13:32:04Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.AList2.delEnd(AList2.java:79)
at TestNGtests.TestDelEnd.test_0(TestDelEnd.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelEnd@2f465398]" started-at="2018-02-28T13:32:04Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.LList1.delEnd(LList1.java:138)
at TestNGtests.TestDelEnd.test_0(TestDelEnd.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelEnd@2f465398]" started-at="2018-02-28T13:32:04Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelEnd@2f465398]" started-at="2018-02-28T13:32:04Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelEnd@2f465398]" started-at="2018-02-28T13:32:04Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelEnd@2f465398]" started-at="2018-02-28T13:32:04Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelEnd@2f465398]" started-at="2018-02-28T13:32:04Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelEnd@2f465398]" started-at="2018-02-28T13:32:04Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelEnd@2f465398]" started-at="2018-02-28T13:32:04Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="20" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelEnd@2f465398]" started-at="2018-02-28T13:32:04Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelEnd@2f465398]" started-at="2018-02-28T13:32:04Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelEnd@2f465398]" started-at="2018-02-28T13:32:04Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelEnd@2f465398]" started-at="2018-02-28T13:32:04Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelEnd@2f465398]" started-at="2018-02-28T13:32:04Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
      </class> <!-- TestNGtests.TestDelEnd -->
      <class name="TestNGtests.TestAddEnd">
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddEnd@2898ac89]" started-at="2018-02-28T13:32:03Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:03Z" duration-ms="21" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddEnd@2898ac89]" started-at="2018-02-28T13:32:03Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:03Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddEnd@2898ac89]" started-at="2018-02-28T13:32:03Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:03Z" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddEnd@2898ac89]" started-at="2018-02-28T13:32:03Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:03Z" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddEnd@2898ac89]" started-at="2018-02-28T13:32:03Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:03Z" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4 9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddEnd@2898ac89]" started-at="2018-02-28T13:32:03Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:03Z" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4 9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddEnd@2898ac89]" started-at="2018-02-28T13:32:03Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:03Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4 9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddEnd@2898ac89]" started-at="2018-02-28T13:32:03Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:03Z" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4 9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddEnd@2898ac89]" started-at="2018-02-28T13:32:03Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:03Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 5 9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddEnd@2898ac89]" started-at="2018-02-28T13:32:03Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:03Z" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 5 9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddEnd@2898ac89]" started-at="2018-02-28T13:32:03Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:03Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 5 9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddEnd@2898ac89]" started-at="2018-02-28T13:32:03Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:03Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 5 9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddEnd@2898ac89]" started-at="2018-02-28T13:32:03Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:03Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5 9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddEnd@2898ac89]" started-at="2018-02-28T13:32:03Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:03Z" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5 9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddEnd@2898ac89]" started-at="2018-02-28T13:32:03Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:03Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5 9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddEnd@2898ac89]" started-at="2018-02-28T13:32:03Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:03Z" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5 9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
      </class> <!-- TestNGtests.TestAddEnd -->
      <class name="TestNGtests.TestMax">
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMax@610f7aa]" started-at="2018-02-28T13:32:05Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.AList0.max(AList0.java:158)
at TestNGtests.TestMax.test_0(TestMax.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMax@610f7aa]" started-at="2018-02-28T13:32:05Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.AList1.max(AList1.java:126)
at TestNGtests.TestMax.test_0(TestMax.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMax@610f7aa]" started-at="2018-02-28T13:32:05Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.AList2.max(AList2.java:118)
at TestNGtests.TestMax.test_0(TestMax.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMax@610f7aa]" started-at="2018-02-28T13:32:05Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.LList1.max(LList1.java:211)
at TestNGtests.TestMax.test_0(TestMax.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMax@610f7aa]" started-at="2018-02-28T13:32:05Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMax@610f7aa]" started-at="2018-02-28T13:32:05Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMax@610f7aa]" started-at="2018-02-28T13:32:05Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMax@610f7aa]" started-at="2018-02-28T13:32:05Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMax@610f7aa]" started-at="2018-02-28T13:32:05Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMax@610f7aa]" started-at="2018-02-28T13:32:05Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMax@610f7aa]" started-at="2018-02-28T13:32:05Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMax@610f7aa]" started-at="2018-02-28T13:32:05Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMax@610f7aa]" started-at="2018-02-28T13:32:05Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMax@610f7aa]" started-at="2018-02-28T13:32:05Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMax@610f7aa]" started-at="2018-02-28T13:32:05Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMax@610f7aa]" started-at="2018-02-28T13:32:05Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
      </class> <!-- TestNGtests.TestMax -->
      <class name="TestNGtests.TestSmoke">
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSmoke@68567e20]" started-at="2018-02-28T13:32:06Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSmoke@68567e20]" started-at="2018-02-28T13:32:06Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSmoke@68567e20]" started-at="2018-02-28T13:32:06Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSmoke@68567e20]" started-at="2018-02-28T13:32:06Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSmoke@68567e20]" started-at="2018-02-28T13:32:06Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSmoke@68567e20]" started-at="2018-02-28T13:32:06Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSmoke@68567e20]" started-at="2018-02-28T13:32:06Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSmoke@68567e20]" started-at="2018-02-28T13:32:06Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSmoke@68567e20]" started-at="2018-02-28T13:32:06Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSmoke@68567e20]" started-at="2018-02-28T13:32:06Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSmoke@68567e20]" started-at="2018-02-28T13:32:06Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSmoke@68567e20]" started-at="2018-02-28T13:32:06Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_many_chet(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSmoke@68567e20]" started-at="2018-02-28T13:32:06Z" name="test_many_chet" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_chet -->
        <test-method signature="test_many_chet(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSmoke@68567e20]" started-at="2018-02-28T13:32:06Z" name="test_many_chet" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_chet -->
        <test-method signature="test_many_chet(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSmoke@68567e20]" started-at="2018-02-28T13:32:06Z" name="test_many_chet" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_chet -->
        <test-method signature="test_many_chet(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSmoke@68567e20]" started-at="2018-02-28T13:32:06Z" name="test_many_chet" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_chet -->
        <test-method signature="test_many_nechet(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSmoke@68567e20]" started-at="2018-02-28T13:32:06Z" name="test_many_nechet" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_nechet -->
        <test-method signature="test_many_nechet(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSmoke@68567e20]" started-at="2018-02-28T13:32:06Z" name="test_many_nechet" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_nechet -->
        <test-method signature="test_many_nechet(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSmoke@68567e20]" started-at="2018-02-28T13:32:06Z" name="test_many_nechet" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_nechet -->
        <test-method signature="test_many_nechet(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSmoke@68567e20]" started-at="2018-02-28T13:32:06Z" name="test_many_nechet" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_nechet -->
        <test-method signature="test_null(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSmoke@68567e20]" started-at="2018-02-28T13:32:06Z" name="test_null" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_null -->
        <test-method signature="test_null(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSmoke@68567e20]" started-at="2018-02-28T13:32:06Z" name="test_null" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_null -->
        <test-method signature="test_null(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSmoke@68567e20]" started-at="2018-02-28T13:32:06Z" name="test_null" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_null -->
        <test-method signature="test_null(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSmoke@68567e20]" started-at="2018-02-28T13:32:06Z" name="test_null" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_null -->
      </class> <!-- TestNGtests.TestSmoke -->
      <class name="TestNGtests.TestDelPos">
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelPos@548e6d58]" started-at="2018-02-28T13:32:04Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.AList0.delPos(AList0.java:122)
at TestNGtests.TestDelPos.test_0(TestDelPos.java:41)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelPos@548e6d58]" started-at="2018-02-28T13:32:04Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.AList1.delPos(AList1.java:95)
at TestNGtests.TestDelPos.test_0(TestDelPos.java:41)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelPos@548e6d58]" started-at="2018-02-28T13:32:04Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.AList2.delPos(AList2.java:87)
at TestNGtests.TestDelPos.test_0(TestDelPos.java:41)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelPos@548e6d58]" started-at="2018-02-28T13:32:04Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.LList1.delPos(LList1.java:166)
at TestNGtests.TestDelPos.test_0(TestDelPos.java:41)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelPos@548e6d58]" started-at="2018-02-28T13:32:04Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelPos@548e6d58]" started-at="2018-02-28T13:32:04Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelPos@548e6d58]" started-at="2018-02-28T13:32:04Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelPos@548e6d58]" started-at="2018-02-28T13:32:04Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelPos@548e6d58]" started-at="2018-02-28T13:32:04Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelPos@548e6d58]" started-at="2018-02-28T13:32:04Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelPos@548e6d58]" started-at="2018-02-28T13:32:04Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelPos@548e6d58]" started-at="2018-02-28T13:32:04Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_hi(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelPos@548e6d58]" started-at="2018-02-28T13:32:04Z" name="test_hi" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.AList0.delPos(AList0.java:122)
at TestNGtests.TestDelPos.test_hi(TestDelPos.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_hi -->
        <test-method signature="test_hi(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelPos@548e6d58]" started-at="2018-02-28T13:32:04Z" name="test_hi" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.AList1.delPos(AList1.java:95)
at TestNGtests.TestDelPos.test_hi(TestDelPos.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_hi -->
        <test-method signature="test_hi(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelPos@548e6d58]" started-at="2018-02-28T13:32:04Z" name="test_hi" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.AList2.delPos(AList2.java:87)
at TestNGtests.TestDelPos.test_hi(TestDelPos.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_hi -->
        <test-method signature="test_hi(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelPos@548e6d58]" started-at="2018-02-28T13:32:04Z" name="test_hi" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.LList1.delPos(LList1.java:166)
at TestNGtests.TestDelPos.test_hi(TestDelPos.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_hi -->
        <test-method signature="test_lo(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelPos@548e6d58]" started-at="2018-02-28T13:32:04Z" name="test_lo" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.AList0.delPos(AList0.java:122)
at TestNGtests.TestDelPos.test_lo(TestDelPos.java:33)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_lo -->
        <test-method signature="test_lo(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelPos@548e6d58]" started-at="2018-02-28T13:32:04Z" name="test_lo" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.AList1.delPos(AList1.java:95)
at TestNGtests.TestDelPos.test_lo(TestDelPos.java:33)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_lo -->
        <test-method signature="test_lo(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelPos@548e6d58]" started-at="2018-02-28T13:32:04Z" name="test_lo" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.AList2.delPos(AList2.java:87)
at TestNGtests.TestDelPos.test_lo(TestDelPos.java:33)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_lo -->
        <test-method signature="test_lo(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelPos@548e6d58]" started-at="2018-02-28T13:32:04Z" name="test_lo" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.LList1.delPos(LList1.java:166)
at TestNGtests.TestDelPos.test_lo(TestDelPos.java:33)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_lo -->
        <test-method signature="test_many_en(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelPos@548e6d58]" started-at="2018-02-28T13:32:04Z" name="test_many_en" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_en -->
        <test-method signature="test_many_en(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelPos@548e6d58]" started-at="2018-02-28T13:32:04Z" name="test_many_en" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_en -->
        <test-method signature="test_many_en(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelPos@548e6d58]" started-at="2018-02-28T13:32:04Z" name="test_many_en" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_en -->
        <test-method signature="test_many_en(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelPos@548e6d58]" started-at="2018-02-28T13:32:04Z" name="test_many_en" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_en -->
        <test-method signature="test_many_md(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelPos@548e6d58]" started-at="2018-02-28T13:32:04Z" name="test_many_md" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_md -->
        <test-method signature="test_many_md(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelPos@548e6d58]" started-at="2018-02-28T13:32:04Z" name="test_many_md" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="33" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_md -->
        <test-method signature="test_many_md(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelPos@548e6d58]" started-at="2018-02-28T13:32:04Z" name="test_many_md" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_md -->
        <test-method signature="test_many_md(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelPos@548e6d58]" started-at="2018-02-28T13:32:04Z" name="test_many_md" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_md -->
        <test-method signature="test_many_st(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelPos@548e6d58]" started-at="2018-02-28T13:32:04Z" name="test_many_st" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_st -->
        <test-method signature="test_many_st(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelPos@548e6d58]" started-at="2018-02-28T13:32:04Z" name="test_many_st" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_st -->
        <test-method signature="test_many_st(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelPos@548e6d58]" started-at="2018-02-28T13:32:04Z" name="test_many_st" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_st -->
        <test-method signature="test_many_st(TestNGtests.EList)[pri:0, instance:TestNGtests.TestDelPos@548e6d58]" started-at="2018-02-28T13:32:04Z" name="test_many_st" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_st -->
      </class> <!-- TestNGtests.TestDelPos -->
      <class name="TestNGtests.TestToString">
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestToString@394a2528]" started-at="2018-02-28T13:32:06Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestToString@394a2528]" started-at="2018-02-28T13:32:06Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestToString@394a2528]" started-at="2018-02-28T13:32:06Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestToString@394a2528]" started-at="2018-02-28T13:32:06Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestToString@394a2528]" started-at="2018-02-28T13:32:06Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestToString@394a2528]" started-at="2018-02-28T13:32:06Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestToString@394a2528]" started-at="2018-02-28T13:32:06Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestToString@394a2528]" started-at="2018-02-28T13:32:06Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestToString@394a2528]" started-at="2018-02-28T13:32:06Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestToString@394a2528]" started-at="2018-02-28T13:32:06Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestToString@394a2528]" started-at="2018-02-28T13:32:06Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestToString@394a2528]" started-at="2018-02-28T13:32:06Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestToString@394a2528]" started-at="2018-02-28T13:32:06Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestToString@394a2528]" started-at="2018-02-28T13:32:06Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestToString@394a2528]" started-at="2018-02-28T13:32:06Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestToString@394a2528]" started-at="2018-02-28T13:32:06Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
      </class> <!-- TestNGtests.TestToString -->
      <class name="TestNGtests.TestSet">
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSet@2118cddf]" started-at="2018-02-28T13:32:06Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSet@2118cddf]" started-at="2018-02-28T13:32:06Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSet@2118cddf]" started-at="2018-02-28T13:32:06Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSet@2118cddf]" started-at="2018-02-28T13:32:06Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSet@2118cddf]" started-at="2018-02-28T13:32:06Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSet@2118cddf]" started-at="2018-02-28T13:32:06Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSet@2118cddf]" started-at="2018-02-28T13:32:06Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSet@2118cddf]" started-at="2018-02-28T13:32:06Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSet@2118cddf]" started-at="2018-02-28T13:32:06Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSet@2118cddf]" started-at="2018-02-28T13:32:06Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSet@2118cddf]" started-at="2018-02-28T13:32:06Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSet@2118cddf]" started-at="2018-02-28T13:32:06Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_ex_hi(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSet@2118cddf]" started-at="2018-02-28T13:32:06Z" name="test_ex_hi" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.AList0.set(AList0.java:253)
at TestNGtests.TestSet.test_ex_hi(TestSet.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_ex_hi -->
        <test-method signature="test_ex_hi(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSet@2118cddf]" started-at="2018-02-28T13:32:06Z" name="test_ex_hi" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.AList1.set(AList1.java:214)
at TestNGtests.TestSet.test_ex_hi(TestSet.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_ex_hi -->
        <test-method signature="test_ex_hi(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSet@2118cddf]" started-at="2018-02-28T13:32:06Z" name="test_ex_hi" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.AList2.set(AList2.java:206)
at TestNGtests.TestSet.test_ex_hi(TestSet.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_ex_hi -->
        <test-method signature="test_ex_hi(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSet@2118cddf]" started-at="2018-02-28T13:32:06Z" name="test_ex_hi" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.LList1.set(LList1.java:331)
at TestNGtests.TestSet.test_ex_hi(TestSet.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_ex_hi -->
        <test-method signature="test_ex_lo(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSet@2118cddf]" started-at="2018-02-28T13:32:06Z" name="test_ex_lo" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.AList0.set(AList0.java:253)
at TestNGtests.TestSet.test_ex_lo(TestSet.java:33)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_ex_lo -->
        <test-method signature="test_ex_lo(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSet@2118cddf]" started-at="2018-02-28T13:32:06Z" name="test_ex_lo" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="21" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.AList1.set(AList1.java:214)
at TestNGtests.TestSet.test_ex_lo(TestSet.java:33)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_ex_lo -->
        <test-method signature="test_ex_lo(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSet@2118cddf]" started-at="2018-02-28T13:32:06Z" name="test_ex_lo" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="29" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.AList2.set(AList2.java:206)
at TestNGtests.TestSet.test_ex_lo(TestSet.java:33)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_ex_lo -->
        <test-method signature="test_ex_lo(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSet@2118cddf]" started-at="2018-02-28T13:32:06Z" name="test_ex_lo" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.LList1.set(LList1.java:331)
at TestNGtests.TestSet.test_ex_lo(TestSet.java:33)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_ex_lo -->
        <test-method signature="test_many_en(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSet@2118cddf]" started-at="2018-02-28T13:32:06Z" name="test_many_en" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_en -->
        <test-method signature="test_many_en(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSet@2118cddf]" started-at="2018-02-28T13:32:06Z" name="test_many_en" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_en -->
        <test-method signature="test_many_en(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSet@2118cddf]" started-at="2018-02-28T13:32:06Z" name="test_many_en" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_en -->
        <test-method signature="test_many_en(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSet@2118cddf]" started-at="2018-02-28T13:32:06Z" name="test_many_en" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_en -->
        <test-method signature="test_many_en_size(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSet@2118cddf]" started-at="2018-02-28T13:32:06Z" name="test_many_en_size" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5 7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_en_size -->
        <test-method signature="test_many_en_size(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSet@2118cddf]" started-at="2018-02-28T13:32:06Z" name="test_many_en_size" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5 7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_en_size -->
        <test-method signature="test_many_en_size(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSet@2118cddf]" started-at="2018-02-28T13:32:06Z" name="test_many_en_size" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5 7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_en_size -->
        <test-method signature="test_many_en_size(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSet@2118cddf]" started-at="2018-02-28T13:32:06Z" name="test_many_en_size" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5 7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_en_size -->
        <test-method signature="test_many_md(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSet@2118cddf]" started-at="2018-02-28T13:32:06Z" name="test_many_md" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 7 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_md -->
        <test-method signature="test_many_md(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSet@2118cddf]" started-at="2018-02-28T13:32:06Z" name="test_many_md" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 7 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_md -->
        <test-method signature="test_many_md(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSet@2118cddf]" started-at="2018-02-28T13:32:06Z" name="test_many_md" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 7 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_md -->
        <test-method signature="test_many_md(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSet@2118cddf]" started-at="2018-02-28T13:32:06Z" name="test_many_md" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 7 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_md -->
        <test-method signature="test_many_st(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSet@2118cddf]" started-at="2018-02-28T13:32:06Z" name="test_many_st" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[7 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_st -->
        <test-method signature="test_many_st(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSet@2118cddf]" started-at="2018-02-28T13:32:06Z" name="test_many_st" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[7 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_st -->
        <test-method signature="test_many_st(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSet@2118cddf]" started-at="2018-02-28T13:32:06Z" name="test_many_st" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[7 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_st -->
        <test-method signature="test_many_st(TestNGtests.EList)[pri:0, instance:TestNGtests.TestSet@2118cddf]" started-at="2018-02-28T13:32:06Z" name="test_many_st" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[7 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_st -->
      </class> <!-- TestNGtests.TestSet -->
      <class name="TestNGtests.TestToArray">
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestToArray@11fc564b]" started-at="2018-02-28T13:32:06Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestToArray@11fc564b]" started-at="2018-02-28T13:32:06Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestToArray@11fc564b]" started-at="2018-02-28T13:32:06Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestToArray@11fc564b]" started-at="2018-02-28T13:32:06Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestToArray@11fc564b]" started-at="2018-02-28T13:32:06Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestToArray@11fc564b]" started-at="2018-02-28T13:32:06Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestToArray@11fc564b]" started-at="2018-02-28T13:32:06Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestToArray@11fc564b]" started-at="2018-02-28T13:32:06Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestToArray@11fc564b]" started-at="2018-02-28T13:32:06Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestToArray@11fc564b]" started-at="2018-02-28T13:32:06Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestToArray@11fc564b]" started-at="2018-02-28T13:32:06Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestToArray@11fc564b]" started-at="2018-02-28T13:32:06Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestToArray@11fc564b]" started-at="2018-02-28T13:32:06Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestToArray@11fc564b]" started-at="2018-02-28T13:32:06Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestToArray@11fc564b]" started-at="2018-02-28T13:32:06Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestToArray@11fc564b]" started-at="2018-02-28T13:32:06Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
      </class> <!-- TestNGtests.TestToArray -->
      <class name="TestNGtests.TestAddPos">
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddPos@6ff29830]" started-at="2018-02-28T13:32:03Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:03Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddPos@6ff29830]" started-at="2018-02-28T13:32:03Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:03Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddPos@6ff29830]" started-at="2018-02-28T13:32:03Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:03Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddPos@6ff29830]" started-at="2018-02-28T13:32:03Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:03Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddPos@6ff29830]" started-at="2018-02-28T13:32:03Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:03Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9 4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddPos@6ff29830]" started-at="2018-02-28T13:32:03Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:03Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9 4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddPos@6ff29830]" started-at="2018-02-28T13:32:03Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:03Z" duration-ms="28" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9 4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddPos@6ff29830]" started-at="2018-02-28T13:32:03Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:03Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9 4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddPos@6ff29830]" started-at="2018-02-28T13:32:03Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:03Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 9 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddPos@6ff29830]" started-at="2018-02-28T13:32:03Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:03Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 9 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddPos@6ff29830]" started-at="2018-02-28T13:32:03Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:03Z" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 9 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddPos@6ff29830]" started-at="2018-02-28T13:32:03Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:03Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 9 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_ex_hi(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddPos@6ff29830]" started-at="2018-02-28T13:32:03Z" name="test_ex_hi" data-provider="Lists" finished-at="2018-02-28T13:32:03Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.AList0.addPos(AList0.java:69)
at TestNGtests.TestAddPos.test_ex_hi(TestAddPos.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_ex_hi -->
        <test-method signature="test_ex_hi(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddPos@6ff29830]" started-at="2018-02-28T13:32:03Z" name="test_ex_hi" data-provider="Lists" finished-at="2018-02-28T13:32:03Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.AList1.addPos(AList1.java:58)
at TestNGtests.TestAddPos.test_ex_hi(TestAddPos.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_ex_hi -->
        <test-method signature="test_ex_hi(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddPos@6ff29830]" started-at="2018-02-28T13:32:03Z" name="test_ex_hi" data-provider="Lists" finished-at="2018-02-28T13:32:03Z" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.AList2.addPos(AList2.java:57)
at TestNGtests.TestAddPos.test_ex_hi(TestAddPos.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_ex_hi -->
        <test-method signature="test_ex_hi(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddPos@6ff29830]" started-at="2018-02-28T13:32:03Z" name="test_ex_hi" data-provider="Lists" finished-at="2018-02-28T13:32:03Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.LList1.addPos(LList1.java:97)
at TestNGtests.TestAddPos.test_ex_hi(TestAddPos.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_ex_hi -->
        <test-method signature="test_ex_lo(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddPos@6ff29830]" started-at="2018-02-28T13:32:03Z" name="test_ex_lo" data-provider="Lists" finished-at="2018-02-28T13:32:03Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.AList0.addPos(AList0.java:69)
at TestNGtests.TestAddPos.test_ex_lo(TestAddPos.java:33)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_ex_lo -->
        <test-method signature="test_ex_lo(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddPos@6ff29830]" started-at="2018-02-28T13:32:04Z" name="test_ex_lo" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.AList1.addPos(AList1.java:58)
at TestNGtests.TestAddPos.test_ex_lo(TestAddPos.java:33)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_ex_lo -->
        <test-method signature="test_ex_lo(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddPos@6ff29830]" started-at="2018-02-28T13:32:04Z" name="test_ex_lo" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.AList2.addPos(AList2.java:57)
at TestNGtests.TestAddPos.test_ex_lo(TestAddPos.java:33)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_ex_lo -->
        <test-method signature="test_ex_lo(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddPos@6ff29830]" started-at="2018-02-28T13:32:04Z" name="test_ex_lo" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.LList1.addPos(LList1.java:97)
at TestNGtests.TestAddPos.test_ex_lo(TestAddPos.java:33)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_ex_lo -->
        <test-method signature="test_many_en(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddPos@6ff29830]" started-at="2018-02-28T13:32:04Z" name="test_many_en" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5 9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_en -->
        <test-method signature="test_many_en(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddPos@6ff29830]" started-at="2018-02-28T13:32:04Z" name="test_many_en" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5 9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_en -->
        <test-method signature="test_many_en(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddPos@6ff29830]" started-at="2018-02-28T13:32:04Z" name="test_many_en" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5 9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_en -->
        <test-method signature="test_many_en(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddPos@6ff29830]" started-at="2018-02-28T13:32:04Z" name="test_many_en" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5 9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_en -->
        <test-method signature="test_many_md(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddPos@6ff29830]" started-at="2018-02-28T13:32:04Z" name="test_many_md" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 9 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_md -->
        <test-method signature="test_many_md(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddPos@6ff29830]" started-at="2018-02-28T13:32:04Z" name="test_many_md" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 9 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_md -->
        <test-method signature="test_many_md(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddPos@6ff29830]" started-at="2018-02-28T13:32:04Z" name="test_many_md" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 9 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_md -->
        <test-method signature="test_many_md(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddPos@6ff29830]" started-at="2018-02-28T13:32:04Z" name="test_many_md" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 9 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_md -->
        <test-method signature="test_many_st(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddPos@6ff29830]" started-at="2018-02-28T13:32:04Z" name="test_many_st" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9 5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_st -->
        <test-method signature="test_many_st(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddPos@6ff29830]" started-at="2018-02-28T13:32:04Z" name="test_many_st" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9 5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_st -->
        <test-method signature="test_many_st(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddPos@6ff29830]" started-at="2018-02-28T13:32:04Z" name="test_many_st" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9 5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_st -->
        <test-method signature="test_many_st(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddPos@6ff29830]" started-at="2018-02-28T13:32:04Z" name="test_many_st" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9 5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_st -->
      </class> <!-- TestNGtests.TestAddPos -->
      <class name="TestNGtests.TestAddStart">
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddStart@6a2b953e]" started-at="2018-02-28T13:32:04Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddStart@6a2b953e]" started-at="2018-02-28T13:32:04Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddStart@6a2b953e]" started-at="2018-02-28T13:32:04Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddStart@6a2b953e]" started-at="2018-02-28T13:32:04Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddStart@6a2b953e]" started-at="2018-02-28T13:32:04Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9 4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddStart@6a2b953e]" started-at="2018-02-28T13:32:04Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9 4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddStart@6a2b953e]" started-at="2018-02-28T13:32:04Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9 4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddStart@6a2b953e]" started-at="2018-02-28T13:32:04Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9 4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddStart@6a2b953e]" started-at="2018-02-28T13:32:04Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9 2 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddStart@6a2b953e]" started-at="2018-02-28T13:32:04Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9 2 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddStart@6a2b953e]" started-at="2018-02-28T13:32:04Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9 2 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddStart@6a2b953e]" started-at="2018-02-28T13:32:04Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9 2 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddStart@6a2b953e]" started-at="2018-02-28T13:32:04Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9 5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddStart@6a2b953e]" started-at="2018-02-28T13:32:04Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9 5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddStart@6a2b953e]" started-at="2018-02-28T13:32:04Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9 5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestAddStart@6a2b953e]" started-at="2018-02-28T13:32:04Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9 5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
      </class> <!-- TestNGtests.TestAddStart -->
      <class name="TestNGtests.TestReverse">
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestReverse@5609159b]" started-at="2018-02-28T13:32:05Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestReverse@5609159b]" started-at="2018-02-28T13:32:05Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestReverse@5609159b]" started-at="2018-02-28T13:32:05Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestReverse@5609159b]" started-at="2018-02-28T13:32:05Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestReverse@5609159b]" started-at="2018-02-28T13:32:05Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestReverse@5609159b]" started-at="2018-02-28T13:32:05Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestReverse@5609159b]" started-at="2018-02-28T13:32:05Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestReverse@5609159b]" started-at="2018-02-28T13:32:05Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestReverse@5609159b]" started-at="2018-02-28T13:32:05Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestReverse@5609159b]" started-at="2018-02-28T13:32:05Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestReverse@5609159b]" started-at="2018-02-28T13:32:05Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestReverse@5609159b]" started-at="2018-02-28T13:32:05Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_many_chet(TestNGtests.EList)[pri:0, instance:TestNGtests.TestReverse@5609159b]" started-at="2018-02-28T13:32:05Z" name="test_many_chet" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9 5 6 4 1 3 8 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_chet -->
        <test-method signature="test_many_chet(TestNGtests.EList)[pri:0, instance:TestNGtests.TestReverse@5609159b]" started-at="2018-02-28T13:32:05Z" name="test_many_chet" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9 5 6 4 1 3 8 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_chet -->
        <test-method signature="test_many_chet(TestNGtests.EList)[pri:0, instance:TestNGtests.TestReverse@5609159b]" started-at="2018-02-28T13:32:05Z" name="test_many_chet" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9 5 6 4 1 3 8 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_chet -->
        <test-method signature="test_many_chet(TestNGtests.EList)[pri:0, instance:TestNGtests.TestReverse@5609159b]" started-at="2018-02-28T13:32:05Z" name="test_many_chet" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9 5 6 4 1 3 8 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_chet -->
        <test-method signature="test_many_nechet(TestNGtests.EList)[pri:0, instance:TestNGtests.TestReverse@5609159b]" started-at="2018-02-28T13:32:06Z" name="test_many_nechet" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 6 4 1 3 8 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_nechet -->
        <test-method signature="test_many_nechet(TestNGtests.EList)[pri:0, instance:TestNGtests.TestReverse@5609159b]" started-at="2018-02-28T13:32:06Z" name="test_many_nechet" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 6 4 1 3 8 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_nechet -->
        <test-method signature="test_many_nechet(TestNGtests.EList)[pri:0, instance:TestNGtests.TestReverse@5609159b]" started-at="2018-02-28T13:32:06Z" name="test_many_nechet" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 6 4 1 3 8 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_nechet -->
        <test-method signature="test_many_nechet(TestNGtests.EList)[pri:0, instance:TestNGtests.TestReverse@5609159b]" started-at="2018-02-28T13:32:06Z" name="test_many_nechet" data-provider="Lists" finished-at="2018-02-28T13:32:06Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 6 4 1 3 8 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_nechet -->
      </class> <!-- TestNGtests.TestReverse -->
      <class name="TestNGtests.TestGet">
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestGet@a1cdc6d]" started-at="2018-02-28T13:32:04Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.AList0.get(AList0.java:244)
at TestNGtests.TestGet.test_0(TestGet.java:41)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestGet@a1cdc6d]" started-at="2018-02-28T13:32:04Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.AList1.get(AList1.java:206)
at TestNGtests.TestGet.test_0(TestGet.java:41)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestGet@a1cdc6d]" started-at="2018-02-28T13:32:04Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.AList2.get(AList2.java:198)
at TestNGtests.TestGet.test_0(TestGet.java:41)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestGet@a1cdc6d]" started-at="2018-02-28T13:32:04Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.LList1.get(LList1.java:316)
at TestNGtests.TestGet.test_0(TestGet.java:41)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestGet@a1cdc6d]" started-at="2018-02-28T13:32:05Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestGet@a1cdc6d]" started-at="2018-02-28T13:32:05Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestGet@a1cdc6d]" started-at="2018-02-28T13:32:05Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestGet@a1cdc6d]" started-at="2018-02-28T13:32:05Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestGet@a1cdc6d]" started-at="2018-02-28T13:32:05Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestGet@a1cdc6d]" started-at="2018-02-28T13:32:05Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestGet@a1cdc6d]" started-at="2018-02-28T13:32:05Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestGet@a1cdc6d]" started-at="2018-02-28T13:32:05Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_ex_hi(TestNGtests.EList)[pri:0, instance:TestNGtests.TestGet@a1cdc6d]" started-at="2018-02-28T13:32:05Z" name="test_ex_hi" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.AList0.get(AList0.java:244)
at TestNGtests.TestGet.test_ex_hi(TestGet.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_ex_hi -->
        <test-method signature="test_ex_hi(TestNGtests.EList)[pri:0, instance:TestNGtests.TestGet@a1cdc6d]" started-at="2018-02-28T13:32:05Z" name="test_ex_hi" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.AList1.get(AList1.java:206)
at TestNGtests.TestGet.test_ex_hi(TestGet.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_ex_hi -->
        <test-method signature="test_ex_hi(TestNGtests.EList)[pri:0, instance:TestNGtests.TestGet@a1cdc6d]" started-at="2018-02-28T13:32:05Z" name="test_ex_hi" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.AList2.get(AList2.java:198)
at TestNGtests.TestGet.test_ex_hi(TestGet.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_ex_hi -->
        <test-method signature="test_ex_hi(TestNGtests.EList)[pri:0, instance:TestNGtests.TestGet@a1cdc6d]" started-at="2018-02-28T13:32:05Z" name="test_ex_hi" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.LList1.get(LList1.java:316)
at TestNGtests.TestGet.test_ex_hi(TestGet.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_ex_hi -->
        <test-method signature="test_ex_lo(TestNGtests.EList)[pri:0, instance:TestNGtests.TestGet@a1cdc6d]" started-at="2018-02-28T13:32:05Z" name="test_ex_lo" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.AList0.get(AList0.java:244)
at TestNGtests.TestGet.test_ex_lo(TestGet.java:33)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_ex_lo -->
        <test-method signature="test_ex_lo(TestNGtests.EList)[pri:0, instance:TestNGtests.TestGet@a1cdc6d]" started-at="2018-02-28T13:32:05Z" name="test_ex_lo" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.AList1.get(AList1.java:206)
at TestNGtests.TestGet.test_ex_lo(TestGet.java:33)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_ex_lo -->
        <test-method signature="test_ex_lo(TestNGtests.EList)[pri:0, instance:TestNGtests.TestGet@a1cdc6d]" started-at="2018-02-28T13:32:05Z" name="test_ex_lo" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.AList2.get(AList2.java:198)
at TestNGtests.TestGet.test_ex_lo(TestGet.java:33)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_ex_lo -->
        <test-method signature="test_ex_lo(TestNGtests.EList)[pri:0, instance:TestNGtests.TestGet@a1cdc6d]" started-at="2018-02-28T13:32:05Z" name="test_ex_lo" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.LList1.get(LList1.java:316)
at TestNGtests.TestGet.test_ex_lo(TestGet.java:33)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_ex_lo -->
        <test-method signature="test_many_en(TestNGtests.EList)[pri:0, instance:TestNGtests.TestGet@a1cdc6d]" started-at="2018-02-28T13:32:05Z" name="test_many_en" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_en -->
        <test-method signature="test_many_en(TestNGtests.EList)[pri:0, instance:TestNGtests.TestGet@a1cdc6d]" started-at="2018-02-28T13:32:05Z" name="test_many_en" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_en -->
        <test-method signature="test_many_en(TestNGtests.EList)[pri:0, instance:TestNGtests.TestGet@a1cdc6d]" started-at="2018-02-28T13:32:05Z" name="test_many_en" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_en -->
        <test-method signature="test_many_en(TestNGtests.EList)[pri:0, instance:TestNGtests.TestGet@a1cdc6d]" started-at="2018-02-28T13:32:05Z" name="test_many_en" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_en -->
        <test-method signature="test_many_md(TestNGtests.EList)[pri:0, instance:TestNGtests.TestGet@a1cdc6d]" started-at="2018-02-28T13:32:05Z" name="test_many_md" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_md -->
        <test-method signature="test_many_md(TestNGtests.EList)[pri:0, instance:TestNGtests.TestGet@a1cdc6d]" started-at="2018-02-28T13:32:05Z" name="test_many_md" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_md -->
        <test-method signature="test_many_md(TestNGtests.EList)[pri:0, instance:TestNGtests.TestGet@a1cdc6d]" started-at="2018-02-28T13:32:05Z" name="test_many_md" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_md -->
        <test-method signature="test_many_md(TestNGtests.EList)[pri:0, instance:TestNGtests.TestGet@a1cdc6d]" started-at="2018-02-28T13:32:05Z" name="test_many_md" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="125" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_md -->
        <test-method signature="test_many_st(TestNGtests.EList)[pri:0, instance:TestNGtests.TestGet@a1cdc6d]" started-at="2018-02-28T13:32:05Z" name="test_many_st" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_st -->
        <test-method signature="test_many_st(TestNGtests.EList)[pri:0, instance:TestNGtests.TestGet@a1cdc6d]" started-at="2018-02-28T13:32:05Z" name="test_many_st" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_st -->
        <test-method signature="test_many_st(TestNGtests.EList)[pri:0, instance:TestNGtests.TestGet@a1cdc6d]" started-at="2018-02-28T13:32:05Z" name="test_many_st" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_st -->
        <test-method signature="test_many_st(TestNGtests.EList)[pri:0, instance:TestNGtests.TestGet@a1cdc6d]" started-at="2018-02-28T13:32:05Z" name="test_many_st" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="22" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many_st -->
      </class> <!-- TestNGtests.TestGet -->
      <class name="TestNGtests.TestMaxPos">
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMaxPos@6a03bcb1]" started-at="2018-02-28T13:32:05Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.AList0.max(AList0.java:158)
at TestNGtests.AList0.maxPos(AList0.java:187)
at TestNGtests.TestMaxPos.test_0(TestMaxPos.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMaxPos@6a03bcb1]" started-at="2018-02-28T13:32:05Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.AList1.max(AList1.java:126)
at TestNGtests.AList1.maxPos(AList1.java:153)
at TestNGtests.TestMaxPos.test_0(TestMaxPos.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMaxPos@6a03bcb1]" started-at="2018-02-28T13:32:05Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.AList2.max(AList2.java:118)
at TestNGtests.AList2.maxPos(AList2.java:145)
at TestNGtests.TestMaxPos.test_0(TestMaxPos.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMaxPos@6a03bcb1]" started-at="2018-02-28T13:32:05Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.LList1.maxPos(LList1.java:249)
at TestNGtests.TestMaxPos.test_0(TestMaxPos.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMaxPos@6a03bcb1]" started-at="2018-02-28T13:32:05Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMaxPos@6a03bcb1]" started-at="2018-02-28T13:32:05Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMaxPos@6a03bcb1]" started-at="2018-02-28T13:32:05Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMaxPos@6a03bcb1]" started-at="2018-02-28T13:32:05Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMaxPos@6a03bcb1]" started-at="2018-02-28T13:32:05Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMaxPos@6a03bcb1]" started-at="2018-02-28T13:32:05Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMaxPos@6a03bcb1]" started-at="2018-02-28T13:32:05Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMaxPos@6a03bcb1]" started-at="2018-02-28T13:32:05Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMaxPos@6a03bcb1]" started-at="2018-02-28T13:32:05Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 16 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMaxPos@6a03bcb1]" started-at="2018-02-28T13:32:05Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 16 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMaxPos@6a03bcb1]" started-at="2018-02-28T13:32:05Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 16 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMaxPos@6a03bcb1]" started-at="2018-02-28T13:32:05Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 16 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
      </class> <!-- TestNGtests.TestMaxPos -->
      <class name="TestNGtests.TestInit">
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestInit@3098cf3b]" started-at="2018-02-28T13:32:05Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestInit@3098cf3b]" started-at="2018-02-28T13:32:05Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestInit@3098cf3b]" started-at="2018-02-28T13:32:05Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestInit@3098cf3b]" started-at="2018-02-28T13:32:05Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestInit@3098cf3b]" started-at="2018-02-28T13:32:05Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestInit@3098cf3b]" started-at="2018-02-28T13:32:05Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestInit@3098cf3b]" started-at="2018-02-28T13:32:05Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestInit@3098cf3b]" started-at="2018-02-28T13:32:05Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestInit@3098cf3b]" started-at="2018-02-28T13:32:05Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestInit@3098cf3b]" started-at="2018-02-28T13:32:05Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestInit@3098cf3b]" started-at="2018-02-28T13:32:05Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestInit@3098cf3b]" started-at="2018-02-28T13:32:05Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestInit@3098cf3b]" started-at="2018-02-28T13:32:05Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestInit@3098cf3b]" started-at="2018-02-28T13:32:05Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestInit@3098cf3b]" started-at="2018-02-28T13:32:05Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestInit@3098cf3b]" started-at="2018-02-28T13:32:05Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
        <test-method signature="test_null(TestNGtests.EList)[pri:0, instance:TestNGtests.TestInit@3098cf3b]" started-at="2018-02-28T13:32:05Z" name="test_null" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_null -->
        <test-method signature="test_null(TestNGtests.EList)[pri:0, instance:TestNGtests.TestInit@3098cf3b]" started-at="2018-02-28T13:32:05Z" name="test_null" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_null -->
        <test-method signature="test_null(TestNGtests.EList)[pri:0, instance:TestNGtests.TestInit@3098cf3b]" started-at="2018-02-28T13:32:05Z" name="test_null" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_null -->
        <test-method signature="test_null(TestNGtests.EList)[pri:0, instance:TestNGtests.TestInit@3098cf3b]" started-at="2018-02-28T13:32:05Z" name="test_null" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_null -->
      </class> <!-- TestNGtests.TestInit -->
      <class name="TestNGtests.TestMin">
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMin@21b2e768]" started-at="2018-02-28T13:32:05Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.AList0.min(AList0.java:142)
at TestNGtests.TestMin.test_0(TestMin.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMin@21b2e768]" started-at="2018-02-28T13:32:05Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.AList1.min(AList1.java:111)
at TestNGtests.TestMin.test_0(TestMin.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMin@21b2e768]" started-at="2018-02-28T13:32:05Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.AList2.min(AList2.java:103)
at TestNGtests.TestMin.test_0(TestMin.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMin@21b2e768]" started-at="2018-02-28T13:32:05Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.LList1.min(LList1.java:193)
at TestNGtests.TestMin.test_0(TestMin.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMin@21b2e768]" started-at="2018-02-28T13:32:05Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMin@21b2e768]" started-at="2018-02-28T13:32:05Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMin@21b2e768]" started-at="2018-02-28T13:32:05Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMin@21b2e768]" started-at="2018-02-28T13:32:05Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="19" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMin@21b2e768]" started-at="2018-02-28T13:32:05Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMin@21b2e768]" started-at="2018-02-28T13:32:05Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMin@21b2e768]" started-at="2018-02-28T13:32:05Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMin@21b2e768]" started-at="2018-02-28T13:32:05Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMin@21b2e768]" started-at="2018-02-28T13:32:05Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMin@21b2e768]" started-at="2018-02-28T13:32:05Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMin@21b2e768]" started-at="2018-02-28T13:32:05Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMin@21b2e768]" started-at="2018-02-28T13:32:05Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
      </class> <!-- TestNGtests.TestMin -->
      <class name="TestNGtests.TestMinPos">
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMinPos@57250572]" started-at="2018-02-28T13:32:05Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.AList0.min(AList0.java:142)
at TestNGtests.AList0.minPos(AList0.java:174)
at TestNGtests.TestMinPos.test_0(TestMinPos.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMinPos@57250572]" started-at="2018-02-28T13:32:05Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.AList1.min(AList1.java:111)
at TestNGtests.AList1.minPos(AList1.java:141)
at TestNGtests.TestMinPos.test_0(TestMinPos.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMinPos@57250572]" started-at="2018-02-28T13:32:05Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.AList2.min(AList2.java:103)
at TestNGtests.AList2.minPos(AList2.java:133)
at TestNGtests.TestMinPos.test_0(TestMinPos.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_0(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMinPos@57250572]" started-at="2018-02-28T13:32:05Z" name="test_0" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
at TestNGtests.LList1.minPos(LList1.java:229)
at TestNGtests.TestMinPos.test_0(TestMinPos.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_0 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMinPos@57250572]" started-at="2018-02-28T13:32:05Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMinPos@57250572]" started-at="2018-02-28T13:32:05Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMinPos@57250572]" started-at="2018-02-28T13:32:05Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_1(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMinPos@57250572]" started-at="2018-02-28T13:32:05Z" name="test_1" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMinPos@57250572]" started-at="2018-02-28T13:32:05Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMinPos@57250572]" started-at="2018-02-28T13:32:05Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMinPos@57250572]" started-at="2018-02-28T13:32:05Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_2(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMinPos@57250572]" started-at="2018-02-28T13:32:05Z" name="test_2" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMinPos@57250572]" started-at="2018-02-28T13:32:05Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMinPos@57250572]" started-at="2018-02-28T13:32:05Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMinPos@57250572]" started-at="2018-02-28T13:32:05Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
        <test-method signature="test_many(TestNGtests.EList)[pri:0, instance:TestNGtests.TestMinPos@57250572]" started-at="2018-02-28T13:32:05Z" name="test_many" data-provider="Lists" finished-at="2018-02-28T13:32:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5 8 3 1 4 6 5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_many -->
      </class> <!-- TestNGtests.TestMinPos -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
