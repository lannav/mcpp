import java.util.Stack;

import javax.swing.JOptionPane;

public class Cargo 
{
	String res = "#1 slot_a -> slot_c\n"
			   + "#2 slot_a -> slot_b\n"
			   + "#1 slot_c -> slot_b\n";
	Stack<Integer> slotA = new Stack<Integer>();
	Stack<Integer> slotB = new Stack<Integer>();
	Stack<Integer> slotC = new Stack<Integer>();
	
	public Cargo ()
	{
		int slab = Integer.parseInt(JOptionPane.showInputDialog("input number"));
		
		for(int i = slab; i > 0; i--)
			slotA.push(i);
		
//		if(slab%2 == 0)
//			doCraneChet();
//		else
//			doCraneNeChet++++();
//		doCrane();
		String result = "";
		
		if(slab == 2)
			result = "#1 slot_a -> slot_b\n"
				   + "#2 slot_a -> slot_c\n"
				   + "#1 slot_b -> slot_c\n";
		
		if(slab >= 3)
			result += res + "#3 slot_a -> slot_c\n" + transABtoBC(res);
		
		if(slab >= 4)
			result = transACAB(result) + "#4 slot_a -> slot_c\n" + transABtoBC(transACAB(result));
		
		if(slab >= 5)
			result = transACAB(result) + "#5 slot_a -> slot_c\n" + transABtoBC(transACAB(result));
		
		if(slab >= 6)
			result = transACAB(result) + "#6 slot_a -> slot_c\n" + transABtoBC(transACAB(result));
		
		if(slab >= 7)
			result = transACAB(result) + "#7 slot_a -> slot_c\n" + transABtoBC(transACAB(result));
		
		if(slab == 8)
			result = transACAB(result) + "#8 slot_a -> slot_c\n" + transABtoBC(transACAB(result));
		
		System.out.println(result);
		
		JOptionPane.showMessageDialog(null,result);
	}
	
	private String transACAB(String str)
	{
		str = str.replaceAll("c", "x");
		str = str.replaceAll("b", "c");
		str = str.replaceAll("x", "b");

		return str;
	}
	
	private String transABtoBC(String str)
	{
		str = str.replaceAll("a", "x");
		str = str.replaceAll("b", "y");
		str = str.replaceAll("c", "a");
		str = str.replaceAll("x", "b");
		str = str.replaceAll("y", "c");

		return str;
	}
	
	private String transBCtoAB(String str)
	{
		str = str.replaceAll("a", "x");
		str = str.replaceAll("b", "y");
		str = str.replaceAll("c", "b");
		str = str.replaceAll("x", "c");
		str = str.replaceAll("y", "a");

		return str;
	}
	
	private void doCrane() 
	{
		if(slotA.empty() && slotB.empty())
			return;
		
		if(slotB.empty() && slotC.empty())
		{
			System.out.println("1");
			AtoC();
			doCrane();
		}
		else if(slotB.empty() && !slotC.empty())
		{
				if(slotA.peek() < slotC.peek())
				{
					System.out.println("2");
					AtoC();
				}
				else
				{
					System.out.println("3");
					AtoB();
				}
			doCrane();
		}
		else if(!slotB.empty() && !slotC.empty())
		{
			if(slotB.peek() > slotC.peek())
			{
				System.out.println("4");
				CtoB();
			}
			else
			{
				if(slotA.empty())
				{
					System.out.println("5");
					BtoA();
				}
				else
				{
					System.out.println("6");
					BtoC();
				}
			}
			doCrane();
		}
		else if(!slotB.empty() && slotC.empty())
		{
			System.out.println("7");
			AtoC();
			doCrane();
		}
			
	}

	
	private void AtoB()
	{
		res += "#"+slotA.peek()+"slot_a -> slot_b\n";
		slotB.push(slotA.pop());
	}
	
	private void AtoC()
	{
		res += "#"+slotA.peek()+"slot_a -> slot_c\n";
		slotC.push(slotA.pop());
	}
	
	private void BtoA()
	{
		res += "#"+slotB.peek()+"slot_b -> slot_a\n";
		slotA.push(slotB.pop());
	}
	
	private void BtoC()
	{
		res += "#"+slotB.peek()+"slot_b -> slot_c\n";
		slotC.push(slotB.pop());
	}
	
	private void CtoA()
	{
		res += "#"+slotC.peek()+"slot_c -> slot_a\n";
		slotA.push(slotC.pop());
	}
	
	private void CtoB()
	{
		res += "#"+slotC.peek()+"slot_c -> slot_b\n";
		slotB.push(slotC.pop());
	}
}
